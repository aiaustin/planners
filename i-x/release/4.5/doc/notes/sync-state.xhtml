<?xml version="1.0" encoding="UTF-8"?>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <title>Synchronized State</title>
  <link rel="stylesheet" href="note-style.css" />
</head>

<!-- Updated: Fri Sep 21 15:20:23 2007 by Jeff Dalton
-->

<body bgcolor="#ffffff">


<h1>Synchronized State</h1>

<h2>Using synchronized state with process panels</h2>

<p>Synchronized state can be used with I-P2 or agents that
are implemented as Ip2 subclasses such as I-Plan and I-Serve.
For a group of agents that are coordinating their state, one
must be selected as a server; the others are clients.</p>

<p>The <a href="agent-extensions.html">agent extension mechanism</a>
is used to tell an agent to use synchronized state.</p>

<p>The server's list of <i>extension-classes</i> must
inclide <tt>ix.ip2.SyncStateServer</tt>, for instance
by specifying a command-line argument or props file
entry
<pre>
   extension-classes=ix.ip2.SyncStateServer
</pre>
The server must be started and be fully up and running
before any clients start running.
</p>

<p>A client's <i>extension-classes</i> must include
<tt>ix.ip2.SyncStateClient</tt>.  In addition it must
have a command-line argument or props file entry
for "sync-state-server".  The value is the symbol/ipc
name of the agent that is acting as the server.
For example, a props file could contain:
<pre>
   extension-classes=ix.ip2.SyncStateClient
   sync-state-server=demo-iserve
</pre>
</p>


<h2>Some current limitations</h2>

<ul>

<li>The server must not use multiple options.</li>

<li>"Undo" should not be used in an option that has
synchronized state.</li>

<li>Clients register automatically with the server as soon as
they start up.</li>

<li>In clients, the state will be synchronized only in the
option-for-input.</li>

</ul>

<hr/>
<small><address>Jeff Dalton &lt;J.Dalton@ed.ac.uk&gt;</address></small>
</body>
</html>
